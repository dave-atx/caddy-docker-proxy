name: Build and Push Caddy Docker Image

on:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/caddy-proxy

jobs:
  check-updates:
    runs-on: ubuntu-latest
    outputs:
      should-build: ${{ steps.check.outputs.should-build }}
      caddy-version: ${{ steps.versions.outputs.caddy-version }}
      proxy-version: ${{ steps.versions.outputs.proxy-version }}
      cloudflare-version: ${{ steps.versions.outputs.cloudflare-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Get latest versions
        id: versions
        run: |
          CADDY_VERSION=$(curl -s https://api.github.com/repos/caddyserver/caddy/releases/latest | jq -r .tag_name)
          PROXY_VERSION=$(curl -s https://api.github.com/repos/lucaslorentz/caddy-docker-proxy/releases/latest | jq -r .tag_name)
          CLOUDFLARE_VERSION=$(curl -s https://api.github.com/repos/caddy-dns/cloudflare/releases/latest | jq -r .tag_name)

          echo "caddy-version=$CADDY_VERSION" >> $GITHUB_OUTPUT
          echo "proxy-version=$PROXY_VERSION" >> $GITHUB_OUTPUT
          echo "cloudflare-version=$CLOUDFLARE_VERSION" >> $GITHUB_OUTPUT

      - name: Check if rebuild needed
        id: check
        run: |
          # Check if versions file exists
          if [ ! -f versions.txt ]; then
            echo "should-build=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Compare versions
          CURRENT_VERSIONS="${{ steps.versions.outputs.caddy-version }},${{ steps.versions.outputs.proxy-version }},${{ steps.versions.outputs.cloudflare-version }}"
          STORED_VERSIONS=$(cat versions.txt)

          if [ "$CURRENT_VERSIONS" != "$STORED_VERSIONS" ]; then
            echo "should-build=true" >> $GITHUB_OUTPUT
          else
            echo "should-build=false" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    needs: check-updates
    if: needs.check-updates.outputs.should-build == 'true' || github.event_name != 'schedule'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=schedule,pattern={{date 'YYYYMMDD'}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update versions file
        if: github.event_name == 'schedule' || github.ref == 'refs/heads/main'
        run: |
          echo "${{ needs.check-updates.outputs.caddy-version }},${{ needs.check-updates.outputs.proxy-version }},${{ needs.check-updates.outputs.cloudflare-version }}" > versions.txt
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add versions.txt
          git diff --staged --quiet || git commit -m "Update dependency versions"
          git push
